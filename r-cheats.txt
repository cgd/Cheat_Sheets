# attach and detach a package:
library("MouseDivGeno")
detach(package:MouseDivGeno)

# start in 64 bit mode:
R --arch x86_64

# Stack-trace in R:
traceback()

# Break on error in R:
options(error = recover)

# Turn warnings into errors
options(warn = 2)

# trim off the 1st and last chars of a string:
substr("hello", start=2, stop=nchar("hello") - 1)

# the apply most similar to haskell's (map f [1..20])
mapply(f, 1:20)
# if you would rather have a vector than a list you can do
sapply(f, 1:20)
# Here is the R version of haskell's zipWith
mapply(get("+"), as.list(1 : 10), as.list(31: 40), SIMPLIFY = F)

# find difference between neighboring values
diff(1:10) # returns nine 1s

# Run Length Encoding
rle(...)
inverse.rle(...)

# replace file extension with empty string
sub("\\..*$", "", "helloworld.exe")

# find string manipulation functions
help.search(keyword="character")

# Find all installed packages matching a substring
grep("MouseDivGeno",rownames(installed.packages()), value = T)

# file stuff
myPath <- file.path(baseDir, "tmp.txt")
if(file.exists(myPath)) file(description = myPath, open = "rt") # open can be: rt, wt, rb, rb, at ...
dir.create("some-dir-name")

# Setting and getting using character names
assign("varname", matrix(1 : 10))
get("varname")

# setting terminal width
options(width=Sys.getenv("COLUMNS"))

# shuffle a vector
sample(1 : 30)

Creating binary packages on windows:
====================================
 * Install latest version of R (choosing non-default install location is OK)
 * Install latest version of Rtools (refer to http://cran.r-project.org/doc/manuals/R-admin.html#The-Windows-toolset)
 * make sure that the R and Rtools bin dirs are on your %PATH%
 * If you have your R code in a tarball or zip file you need to unzip it.
 * Enter: "Rcmd check <package_src_dir>" to check on any package errors or warnings
 * Enter: "Rcmd build --binary <package_src_dir>" on the command line
